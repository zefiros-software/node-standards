#!/usr/bin/env node
const { existsSync, readdirSync, readFileSync, writeFileSync, unlinkSync } = require('fs')
const isCi = require('is-ci')

if (!isCi) {
    const {execSync} = require('child_process')

    try {
        execSync('lefthook version')
    } catch {
        let dependencies = {}
        try {
            const stdout = execSync('npm -j -g ls @arkweid/lefthook').toString()
            dependencies = JSON.parse(stdout).dependencies
        } catch (err) {
            dependencies = {}
        }
        if (dependencies['@arkweid/lefthook'] === undefined) {
            execSync('npm i -g @arkweid/lefthook', { stdio: 'inherit' })
        }
    }
    if (existsSync('./.git')) {
        execSync('lefthook install', { stdio: 'inherit', cwd: process.env.INIT_CWD || process.cwd() })
        for(const file of readdirSync(`./.git/hooks`)) {
            const hook = `./.git/hooks/${file}`
            const content = readFileSync(hook).toString()
            writeFileSync(hook, content.replace(/call_lefthook \"(.*)\"/g, 'lefthook \$1'))
        }
        unlinkSync('./.git/hooks/prepare-commit-msg')
    }
}
